name: Build, Test and Push Docker Images with Compose

on:
  push:
    branches: [main]

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract short SHA
        id: vars
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build services with docker-compose
        run: |
          docker-compose -f docker-compose.yml build

      - name: Run services with docker-compose
        run: |
          docker-compose -f docker-compose.yml up -d
          sleep 10

      - name: Check backend is running
        run: |
          if [ "$(docker inspect -f '{{.State.Running}}' $(docker-compose ps -q backend))" != "true" ]; then
            echo "❌ Backend failed to start"
            docker-compose logs backend
            exit 1
          fi

      - name: Check frontend is running
        run: |
          if [ "$(docker inspect -f '{{.State.Running}}' $(docker-compose ps -q frontend))" != "true" ]; then
            echo "❌ Frontend failed to start"
            docker-compose logs frontend
            exit 1
          fi

      - name: Shut down containers
        run: docker-compose -f docker-compose.yml down

      - name: Tag and Push images to DockerHub
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/style-sync-selector-backend:latest ${{ secrets.DOCKER_USERNAME }}/style-sync-selector-backend:${{ env.SHORT_SHA }}
          docker tag ${{ secrets.DOCKER_USERNAME }}/style-sync-selector-frontend:latest ${{ secrets.DOCKER_USERNAME }}/style-sync-selector-frontend:${{ env.SHORT_SHA }}

          docker push ${{ secrets.DOCKER_USERNAME }}/style-sync-selector-backend:${{ env.SHORT_SHA }}
          docker push ${{ secrets.DOCKER_USERNAME }}/style-sync-selector-backend:latest

          docker push ${{ secrets.DOCKER_USERNAME }}/style-sync-selector-frontend:${{ env.SHORT_SHA }}
          docker push ${{ secrets.DOCKER_USERNAME }}/style-sync-selector-frontend:latest

      - name: Save image digests
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/style-sync-selector-backend:${{ env.SHORT_SHA }}
          docker pull ${{ secrets.DOCKER_USERNAME }}/style-sync-selector-frontend:${{ env.SHORT_SHA }}

          docker inspect --format='{{index .RepoDigests 0}}' ${{ secrets.DOCKER_USERNAME }}/style-sync-selector-backend:${{ env.SHORT_SHA }} > digest-backend.txt
          docker inspect --format='{{index .RepoDigests 0}}' ${{ secrets.DOCKER_USERNAME }}/style-sync-selector-frontend:${{ env.SHORT_SHA }} > digest-frontend.txt

      - name: Upload digest artifacts
        uses: actions/upload-artifact@v4
        with:
          name: image-digests
          path: |
            digest-backend.txt
            digest-frontend.txt
